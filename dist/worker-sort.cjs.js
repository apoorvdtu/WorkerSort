"use strict";var n=typeof document<"u"?document.currentScript:null;function f(r,t){const o=[];for(let e=0;e<r.length;e+=t)o.push(r.slice(e,e+t));return o}function k(r,t){return new Promise((o,e)=>{const s=t.toString(),g=navigator.hardwareConcurrency||4,d=Math.ceil(r.length/g),u=[];let i=0;const m=f(r,d);m.forEach((h,p)=>{const a=new Worker(new URL("/assets/worker-RpyYxF_s.js",typeof document>"u"?require("url").pathToFileURL(__filename).href:n&&n.tagName.toUpperCase()==="SCRIPT"&&n.src||new URL("worker-sort.cjs.js",document.baseURI).href));a.postMessage({array:h,comparator:s}),a.onmessage=c=>{u[p]=c.data,i++,a.terminate(),i===m.length&&l(u,o,e)},a.onerror=c=>{a.terminate(),e(new Error(`Sorting Worker error: ${c.message}`))}})})}function l(r,t,o){const e=new Worker(new URL("/assets/mergeWorker-C12rgu0E.js",typeof document>"u"?require("url").pathToFileURL(__filename).href:n&&n.tagName.toUpperCase()==="SCRIPT"&&n.src||new URL("worker-sort.cjs.js",document.baseURI).href));e.postMessage(r),e.onmessage=s=>{t(s.data),e.terminate()},e.onerror=s=>{e.terminate(),o(new Error(`Merge Worker error: ${s.message}`))}}module.exports=k;
